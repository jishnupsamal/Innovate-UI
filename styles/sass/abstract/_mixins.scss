@use './variables' as var;
@use "sass:map";

// Button
@mixin button($value: var.$primary, $text: var.$dark) {
    @extend .button;
    background-color: $value;
    color: $text;
    &:hover {
        transition: background-color ease-in-out 500ms;
        background-color: scale-color($color: $value, $lightness: -10%);
    }

    &:active {
        transition: background-color ease-in-out 500ms;
        background-color: scale-color($color: $value, $lightness: -80%); 
    }

    &:disabled {
        background-color: scale-color($color: $value, $lightness: 90%);
        color: scale-color($color: var.$dark, $lightness: 50%);
    }

    &_outline {
        @extend .button;
        color: $value;
        border: 1px solid $value;
        background-color: transparent;
        // font-size: 15px;
        &:hover {
            transition: background-color ease-in-out 500ms;
            background-color: scale-color($color: $value, $lightness: 95%);
        }

        &:active {
            transition: background-color ease-in-out 500ms;
            background-color: scale-color($color: $value, $lightness: -50%); 
        }

        &:disabled {
            color: scale-color($color: $value, $lightness: 60%);
            border: 1px solid scale-color($color: $value, $lightness: 60%);
            background-color: transparent;
        }
    }
}

// Media Query
@mixin devices($breakpoint) {
    @if $breakpoint == 'xs' {
        @media only screen and (max-width: map.get(var.$breakpoints, s)) {
            @content;
        }
    };
    @if $breakpoint == 's' {
        @media only screen and (min-width: map.get(var.$breakpoints, s)) 
        and (max-width: map.get(var.$breakpoints, m)) {
            @content;
        }
    };
    @if $breakpoint == 'm' {
        @media only screen and (min-width: map.get(var.$breakpoints, m)) 
        and (max-width: map.get(var.$breakpoints, l)) {
            @content;
        }
    };
    @if $breakpoint == 'l' {
        @media only screen and (min-width: map.get(var.$breakpoints, l)) {
            @content;
        }
    };
};